<!-- templates/report.html -->
<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>{{ title }}</title>
  <script src="https://cdn.plot.ly/plotly-3.1.0-rc.0.min.js" charset="utf-8"></script>
  <style>
    html {
      scroll-behavior: smooth;
    }
    body { font-family: sans-serif; margin: 2em; }
    .tab { display: none; }
    .tabs button.active {
          background-color: #ccc;
        }
    .tab.active { display: block; }
    .tabs button { 
      margin-right: 5px; 
      min-width: 120px;
      min-height: 20px;
      text-align: center;
      cursor: pointer;
    }
    .fixed-header {
      position: fixed;
      top: 0;
      width: 100%;
      background: white;
      z-index: 1000;
      padding: 1em 2em;
      border-bottom: 1px solid #ccc;
    }
    .fixed-links {
      position: fixed;
      top: 130px; /* Position below the main header */
      width: 100%;
      background: #f8f8f8;
      z-index: 999;
      padding: 10px 2em;
      border-bottom: 1px solid #ddd;
      font-size: 18px;
      font-weight: bold;
    }
    .fixed-links a {
      color: #0066cc;
      text-decoration: none;
      margin: 0 5px;
    }

    .fixed-links a:hover {
      text-decoration: underline;
    }

    .feature-select {
      position: fixed;
      top: 130px; /* Position below the main header */
      background: #f8f8f8;
      z-index: 999;
      padding: 10px 2em;
      border-bottom: 1px solid #ddd;
      font-size: 18px;
      font-weight: bold;
    }
    .feature-link {
      color: #ae00ff;
      text-decoration: none;
    }

    .feature-link:hover {
      text-decoration: underline;
    }
    .anchor-offset {
      padding-top: 180px;
      margin-top: -180px;
    }
    body {
      margin-top: 180px; /* adjust depending on header height */
    }
  .table-wrapper {
    overflow-x: auto;
    max-height: 500px;
  }
  .table-wrapper table {
    border-collapse: collapse;
    width: 100%;
  }
  .table-wrapper th, .table-wrapper td {
    padding: 8px;
    border: 1px solid #000000;
  }
  .table-wrapper tr:nth-child(even) {
    background-color: #f9f9f9;
  }
  .table-wrapper tr:nth-child(odd) {
    background-color: #fff;
  }

  .tab-inner button.active { background-color: #ccc; }
  .tabcontent-inner { display: none; padding: 10px 0; }
    .tab-inner button { 
      margin-right: 5px; 
      min-width: 120px;
      min-height: 20px;
      text-align: center;
      cursor: pointer;
    }
  
  .tab-inner_test button.active { background-color: #ccc; }
  .tabcontent-inner_test { display: none; padding: 10px 0; }
    .tab-inner_test button { 
      margin-right: 5px; 
      min-width: 120px;
      min-height: 20px;
      text-align: center;
      cursor: pointer;
    }

  table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 1em;
  }
  th, td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: left;
  }
  th {
      background-color: #f0f0f0;
  }
  h2 {
      margin-top: 2em;
  }
  table td:first-child,
  table th:first-child {
    width: 200px; /* or any fixed pixel value */
    white-space: nowrap; /* optional: prevents text from wrapping */
  }
  .frequency-table {
    border-collapse: collapse;
    margin-top: 10px;
    width: 100%;
  }
  .frequency-table th, .frequency-table td {
    padding: 6px 12px;
    border: 1px solid #ccc;
    text-align: left;
  }
  .frequency-table th {
    background-color: #f4f4f4;
  }
  .frequency-table td:first-child,
  .frequency-table th:first-child,
  .frequency-table td:nth-child(2),
  .frequency-table th:nth-child(2) {
    white-space: nowrap;
    width: 1%;
  }
  .frequency-table td:first-child {
    text-align: left;
  }
  table td, table th {
    vertical-align: top;
  }
.header-title-group {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  width: 100%;
}

  .plot-wrapper {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .plot-cell {
    flex: 1 1 300px;
    min-width: 250px;
    max-width: 100%;
  }

  .responsive-img {
    width: 100%;
    height: auto;
    display: block;
  }

.report-date {
  margin: 0;
  font-size: 0.9em;
  color: #555;
  margin-left: auto;
  padding-right: 80px;
}
</style>
</head>
<body>

<div class="fixed-header">
  <div class="header-title-group">
    <h1>{{ title }}</h1>
    <p class="report-date">Report generated on: {{ current_time.strftime("%Y-%m-%d %H:%M:%S") }}</p>
  </div>
<div class="tabs">
  {% for tab in tabs %}
    <button onclick="showTab('{{ loop.index0 }}')" {% if loop.first %}class="active"{% endif %}>
      {{ tab.title }}
    </button>
  {% endfor %}
</div>
</div>
  {% for tab in tabs %}
    <div class="tab {% if loop.index0 == 0 %}active{% endif %}" id="tab-{{ loop.index0 }}">
      {{ tab.content | safe }}
    </div>
  {% endfor %}

<script>
function openInnerTab(evt, tabId) {
  const contents = document.querySelectorAll('.tabcontent-inner');
  contents.forEach(c => c.style.display = 'none');

  const buttons = document.querySelectorAll('.tablinks-inner');
  buttons.forEach(b => b.classList.remove('active'));

  document.getElementById(tabId).style.display = 'block';
  evt.currentTarget.classList.add('active');
}

function showTab(index) {
  // Remove active class from all tabs and buttons
  window.scrollTo({ top: 0, behavior: 'smooth' });
  document.querySelectorAll('.tab').forEach((el, i) => {
    el.classList.toggle('active', i == index);
  });
  
  // Remove active class from all buttons
  document.querySelectorAll('.tabs button').forEach(btn => {
    btn.classList.remove('active');
  });
  
  // Add active class to clicked button
  document.querySelectorAll('.tabs button')[index].classList.add('active');
}

// Initialize the first inner tab when page loads
document.addEventListener('DOMContentLoaded', function() {
  document.getElementById("defaultInnerOpen").click();
});
</script>

</body>
</html>
