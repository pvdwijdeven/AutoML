<!DOCTYPE html>
<html lang="en" data-bs-theme="auto">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{{ title }}</title>
    <script src="https://cdn.plot.ly/plotly-3.1.0-rc.0.min.js" charset="utf-8"></script>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    {{ styling | safe }}
    <style>

    html {
      scroll-behavior: smooth;
    }
    body { font-family: sans-serif;}
    .tab { display: none; }
    .tab.active { display: block; }



  .flex-grow-1 {
    min-width: 0;
    overflow-x: hidden;
  }
    .feature-select {
      position: fixed;
      top: 30px; 

      z-index: 999;
      padding: 10px 2em;
      border-bottom: 1px solid #ddd;
      font-size: 18px;
      font-weight: bold;
    }
    .feature-link {
      text-decoration: none;
    }

    .feature-link:hover {
      text-decoration: underline;
    }
  .table-wrapper {
    overflow-x: auto;
    width: 90%;
  }
  .table-wrapper table {
    width: max-content;
    min-width: 90%;
  }
  .table-wrapper th, .table-wrapper td {
    padding: 8px;
  }
  .table-wrapper {
    background-color: var(--bs-table-striped-bg);
  }

  .tabcontent-inner { display: none; padding: 10px 0; }
    .tab-inner button { 
      margin-right: 5px; 
      min-width: 120px;
      min-height: 20px;
      text-align: center;
      cursor: pointer;
    }
  
  .tabcontent-inner_test { display: none; padding: 10px 0; }
    .tab-inner_test button { 
      margin-right: 5px; 
      min-width: 120px;
      min-height: 20px;
      text-align: center;
      cursor: pointer;
    }

  table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 1em;
  }
  th, td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: left;
  }
  h2 {
      margin-top: 2em;
  }
  table td:first-child,
  table th:first-child {
    width: 200px; /* or any fixed pixel value */
    white-space: nowrap; /* optional: prevents text from wrapping */
  }
  .frequency-table {
    border-collapse: collapse;
    margin-top: 10px;
    width: 100%;
  }
  .frequency-table th, .frequency-table td {
    padding: 6px 12px;
    border: 1px solid #ccc;
    text-align: left;
  }

  .frequency-table td:first-child,
  .frequency-table th:first-child,
  .frequency-table td:nth-child(2),
  .frequency-table th:nth-child(2) {
    white-space: nowrap;
    width: 1%;
  }
  .frequency-table td:first-child {
    text-align: left;
  }
  table td, table th {
    vertical-align: top;
  }
.header-title-group {
  display: flex;
  justify-content: space-between;
  align-items: baseline;
  width: 100%;
}

  .plot-wrapper {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .plot-cell {
    flex: 1 1 300px;
    min-width: 250px;
    max-width: 100%;
  }

  .responsive-img {
    width: 100%;
    height: auto;
    display: block;
  }

.report-date {
  margin: 0;
  font-size: 0.9em;
  margin-left: auto;
  padding-right: 80px;
}

      body {
        overflow-x: hidden;
      }

    .sidebar {
      position: sticky;
      top: 0;
      height: 100vh;
      overflow-y: auto;
      transition: width 0.3s ease;
    }

.sidebar.collapsed {
  flex: 0 0 60px;
  width: 60px;
}
.sidebar.expanded {
  flex: 0 0 250px;
  width: 250px;
}

      #toggleSidebar {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0.375rem 0.5rem;
        width: 40px;
        height: 40px;
      }

      .sidebar .nav-link {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.375rem 1rem;
        white-space: nowrap;
      }

      .sidebar .nav-link i {
        flex-shrink: 0;
        width: 20px;
        text-align: center;
        line-height: 1;
        font-size: 1.25rem;
      }

      .menu-label {
        transition: opacity 0.3s, width 0.3s;
      }

      .sidebar.collapsed .menu-label {
        opacity: 0;
        width: 0;
        overflow: hidden;
      }

      .sidebar.collapsed ul.nav > li.nav-item {
        margin-bottom: 0;
      }

      .sidebar.collapsed ul.nav > li.nav-item > a.nav-link {
        padding-left: 0.5rem;
        padding-right: 0.5rem;
        justify-content: center;
      }

      .collapse-inner {
        padding-left: 1.5rem;
      }

      @media (max-width: 768px) {
        .sidebar {
          position: absolute;
          z-index: 1040;
        }
      }
    </style>
  </head>
  <body>
    <div class="d-flex">
      <!-- Sidebar -->
      <div id="sidebar" class="sidebar bg-body-tertiary expanded border-end">
        <div class="d-flex flex-column p-3">
          <button
            id="toggleSidebar"
            class="btn btn-outline-secondary mb-3"
            aria-label="Toggle sidebar"
          >
            <i class="bi bi-list"></i>
          </button>

          <ul class="nav nav-pills flex-column mb-auto" id="menuAccordion">
            <!-- General overview -->
            <li class="nav-item">
              <a
                class="nav-link"
                data-bs-toggle="collapse"
                href="#menu1"
                onclick="showTab('0')"
                role="button"
              >
                <i class="bi bi-house"></i
                ><span class="menu-label">General overview</span>
              </a>
              <div class="collapse" id="menu1">
                <div class="collapse-inner">
                  <a class="nav-link" href="#feature-overview" onclick="showTab('0')">Feature overview</a>
                  <a class="nav-link" href="#target-overview" onclick="showTab('0')">Target overview</a>
                  <a class="nav-link" href="#general" onclick="showTab('0')">General</a>
                  <a class="nav-link" href="#sample-data" onclick="showTab('0')">Sample data</a>
                </div>
              </div>
            </li>

            <!-- Features (no submenu) -->
            <li class="nav-item">
              <a class="nav-link" href="#" onclick="showTab('1')">
                <i class="bi bi-ui-checks-grid"></i
                ><span class="menu-label">Features</span>
              </a>
            </li>

            <!-- Relations -->
            <li class="nav-item">
              <a
                class="nav-link"
                data-bs-toggle="collapse"
                href="#menu3"
                onclick="showTab('2')"
                role="button"
              >
                <i class="bi bi-diagram-3"></i
                ><span class="menu-label">Relations</span>
              </a>
              <div class="collapse" id="menu3">
                <div class="collapse-inner">
                  <a class="nav-link" href="#correlation-plot" onclick="showTab('2')">Correlation plot</a>
                  <a class="nav-link" href="#mi-plot" onclick="showTab('2')">Mutual information</a>
                  <a class="nav-link" href="#rel-per-feature" onclick="showTab('2')">Per feature</a>
                </div>
              </div>
            </li>

            <!-- Missing values -->
            <li class="nav-item">
              <a
                class="nav-link"
                data-bs-toggle="collapse"
                href="#menu4"
                onclick="showTab('3')"
                role="button"
              >
                <i class="bi bi-exclamation-diamond"></i
                ><span class="menu-label">Missing values</span>
              </a>
              <div class="collapse" id="menu4">
                <div class="collapse-inner">
                  <a class="nav-link" href="#general-info-missing" onclick="showTab('3')">General information</a>
                  {% if missing_data %}
                  <a class="nav-link" href="#plot-missing" onclick="showTab('3')">Missingness plot</a>
                  <a class="nav-link" href="#per-feature" onclick="showTab('3')">Per feature</a>
                  <a class="nav-link" href="#plot-missing-relation" onclick="showTab('3')">Correlation plot</a>
                  <a class="nav-link" href="#missing-summary" onclick="showTab('3')">Summary</a>
                  {% endif %}
                </div>
              </div>
            </li>
            {% if show_test_data %}
            <!-- Test data -->
            <li class="nav-item">
              <a
                class="nav-link"
                data-bs-toggle="collapse"
                href="#menu5"
                onclick="showTab('4')"
                role="button"
              >
                <i class="bi bi-clipboard-data"></i
                ><span class="menu-label">Test data</span>
              </a>
              <div class="collapse" id="menu5">
                <div class="collapse-inner">
                  <a class="nav-link" href="#size-comparison" onclick="showTab('4')">Size comparison</a>
                  <a class="nav-link" href="#column-differences" onclick="showTab('4')">Column differences</a>
                  <a class="nav-link" href="#missing-values" onclick="showTab('4')">Missingness</a>
                  <a class="nav-link" href="#unseen-categories" onclick="showTab('4')">Unseen categories</a>
                  <a class="nav-link" href="#numeric-comparison" onclick="showTab('4')">Numeric comparison</a>
                  <a class="nav-link" href="#dtype-mismatches" onclick="showTab('4')">Type mismatches</a>
                  <a class="nav-link" href="#test-samples" onclick="showTab('4')">Sample data</a>
                </div>
              </div>
            </li>
          
            <!-- Recommendations (no submenu) -->
            <li class="nav-item">
              <a class="nav-link" href="#" onclick="showTab('5')">
                <i class="bi bi-lightbulb"></i
                ><span class="menu-label">Recommendations</span>
              </a>
            </li>
          </ul>
          {% else %}
            <!-- Recommendations (no submenu) -->
            <li class="nav-item">
              <a class="nav-link" href="#" onclick="showTab('4')">
                <i class="bi bi-lightbulb"></i
                ><span class="menu-label">Recommendations</span>
              </a>
            </li>
          </ul>
          {% endif %}
          <hr />
          <div class="d-flex justify-content-between">
            <span class="menu-label">Theme</span>
            <div class="form-check form-switch">
              <input
                class="form-check-input"
                type="checkbox"
                id="themeToggle"
              />
            </div>
          </div>
        </div>
      </div>

      <!-- Main Content -->
      <div class="flex-grow-1 p-4">
        <div class="header-title-group">
          <h1>{{ title }}</h1>
          <p class="report-date">Report generated on: {{ current_time.strftime("%Y-%m-%d %H:%M:%S") }}</p>
        </div>
          {% for tab in tabs %}
            <div class="tab {% if loop.index0 == 0 %}active{% endif %}" id="tab-{{ loop.index0 }}">
              {{ tab.content | safe }}
            </div>
          {% endfor %}
      </div>
    </div>

    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
      const sidebar = document.getElementById("sidebar");
      const toggleBtn = document.getElementById("toggleSidebar");
      const themeToggle = document.getElementById("themeToggle");
      const html = document.documentElement;

      const allMenus = Array.from(document.querySelectorAll('.collapse')).map(el => `#${el.id}`);

      window.addEventListener("DOMContentLoaded", () => {
        allMenus.forEach((id) => {
          const el = document.querySelector(id);
          const collapse = bootstrap.Collapse.getOrCreateInstance(el, {
            toggle: false,
          });
          collapse.hide();
        });
      });

      toggleBtn.addEventListener("click", () => {
        const isCollapsing = sidebar.classList.contains("expanded");
        sidebar.classList.toggle("collapsed");
        sidebar.classList.toggle("expanded");

        if (isCollapsing) {
          allMenus.forEach((id) => {
            const el = document.querySelector(id);
            const collapse = bootstrap.Collapse.getOrCreateInstance(el);
            collapse.hide();
          });
        }
      });

      document
        .querySelectorAll('[data-bs-toggle="collapse"]')
        .forEach((link) => {
          link.addEventListener("click", function (e) {
            const targetId = this.getAttribute("href") || this.dataset.target;
            const collapseTarget = document.querySelector(targetId);

            allMenus.forEach((id) => {
              if (id !== targetId) {
                const otherCollapse = bootstrap.Collapse.getOrCreateInstance(
                  document.querySelector(id)
                );
                otherCollapse.hide();
              }
            });

            if (sidebar.classList.contains("collapsed")) {
              e.preventDefault();
              sidebar.classList.remove("collapsed");
              sidebar.classList.add("expanded");

              setTimeout(() => {
                const bsCollapse =
                  bootstrap.Collapse.getOrCreateInstance(collapseTarget);
                bsCollapse.show();
              }, 300);
            }
          });
        });

      const systemPref = window.matchMedia("(prefers-color-scheme: dark)")
        .matches
        ? "dark"
        : "light";
      html.setAttribute("data-bs-theme", systemPref);
      themeToggle.checked = systemPref === "dark";


      function getPlotlyLayoutByTheme(theme) {
        if (theme === 'dark') {
          return {
            paper_bgcolor: '#212529',     // Bootstrap dark bg
            plot_bgcolor: '#212529',
            font: {
              color: '#f8f9fa'            // Bootstrap light text
            },
            xaxis: {
              gridcolor: '#444',
              zerolinecolor: '#666'
            },
            yaxis: {
              gridcolor: '#444',
              zerolinecolor: '#666'
            }
          };
        } else {
          return {
            paper_bgcolor: '#ffffff',
            plot_bgcolor: '#ffffff',
            font: {
              color: '#212529'            // Bootstrap body text
            },
            xaxis: {
              gridcolor: '#ccc',
              zerolinecolor: '#aaa'
            },
            yaxis: {
              gridcolor: '#ccc',
              zerolinecolor: '#aaa'
            }
          };
        }
      }
      const theme = document.documentElement.getAttribute('data-bs-theme');
      const layout = getPlotlyLayoutByTheme(theme);
      Plotly.relayout('update-corr-plot', layout);
      Plotly.relayout('update-mi-plot', layout);
      {% if missing_data %}
      Plotly.relayout('update-missing-plot', layout);
      Plotly.relayout('update-cor-miss', layout);
      {% endif %}
      themeToggle.addEventListener("change", () => {
        html.setAttribute(
          "data-bs-theme",
          themeToggle.checked ? "dark" : "light"
        );
        const theme = document.documentElement.getAttribute('data-bs-theme');
        const layout = getPlotlyLayoutByTheme(theme);
        Plotly.relayout('update-corr-plot', layout);
        Plotly.relayout('update-mi-plot', layout);
        {% if missing_data %}
        Plotly.relayout('update-missing-plot', layout);
        Plotly.relayout('update-cor-miss', layout);
        {% endif %}
      });


        function showTab(index) {
      // Remove active class from all tabs and buttons
      window.scrollTo({ top: 0, behavior: 'smooth' });
      document.querySelectorAll('.tab').forEach((el, i) => {
        el.classList.toggle('active', i == index);
      });
    }

        let plotResized = false;
{% if missing_data %}
    const interval = setInterval(() => {
        const tab = document.getElementById('tab-3');
        const isActive = tab.classList.contains('active');

        if (isActive && !plotResized) {
        const plot = document.getElementById('update-missing-plot');
        if (plot) {
            Plotly.Plots.resize(plot);
            plotResized = true; // Only resize once per activation
        }
        } else if (!isActive) {
        plotResized = false; // Reset if tab becomes inactive
        }
    }, 200);
  {% endif %}
    </script>

  </body>
</html>
